{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/layout-content/layout-content.component.css","webpack:///./src/app/layout-content/layout-content.component.html","webpack:///./src/app/layout-content/layout-content.component.ts","webpack:///./src/app/layout-topbar/layout-topbar.component.css","webpack:///./src/app/layout-topbar/layout-topbar.component.html","webpack:///./src/app/layout-topbar/layout-topbar.component.ts","webpack:///./src/app/layout-wrapper/layout-wrapper.component.css","webpack:///./src/app/layout-wrapper/layout-wrapper.component.html","webpack:///./src/app/layout-wrapper/layout-wrapper.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes : Routes = [\n  // { path: '', component: NonameComponent },\n]\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<layout-wrapper></layout-wrapper>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'route-management-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { LayoutWrapperComponent } from './layout-wrapper/layout-wrapper.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { LayoutTopbarComponent } from './layout-topbar/layout-topbar.component';\nimport { LayoutContentComponent } from './layout-content/layout-content.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LayoutWrapperComponent,\n    LayoutTopbarComponent,\n    LayoutContentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  layout-content works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout-content',\n  templateUrl: './layout-content.component.html',\n  styleUrls: ['./layout-content.component.css']\n})\nexport class LayoutContentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Ubuntu');\\n\\n#layout-topbar {\\n    background-color: #E5E7E9;\\n    display:block;\\n    height:100px;\\n    width:100%;\\n    padding:0;\\n    margin: 20px 0 0 0;\\n    /* border-radius:10px; */\\n}\\n\\n.logo {\\n    display:inline-block;\\n    margin-top:5px;\\n    margin-left: 5%;\\n}\\n\\nimg {\\n    height: 90px;\\n}\\n\\n.helper {\\n    display: inline-block;\\n    height: 100%;\\n    vertical-align: middle;\\n}\\n\\n#name {\\n    display: inline-block;\\n    font-family: 'Ubuntu', sans-serif;\\n    color: #ECF0F1;\\n    font-size: 2em;\\n    margin: 10px 25px;\\n    vertical-align: top;\\n}\\n\\n.menu {\\n    float: right;\\n    width: 200px;\\n    height: 90px;\\n    margin-right:5%;\\n    border: 3px solid palegreen;\\n}\\n\\n.auth {\\n    text-align: center;\\n}\\n\\n.btn {\\n    color: white;\\n    background-color: black;\\n    padding: 3px;\\n    margin: 4px;\\n    text-align: center;\\n}\\n\\n\\n\"","module.exports = \"<div id=\\\"layout-topbar\\\">\\n  <a routerLink=\\\"/\\\">\\n      <span class=\\\"logo\\\">\\n          <img  src=\\\"../../assets/app-logo.png\\\">\\n        </span>\\n        <!-- <div id=\\\"name\\\">Easy way</div> -->\\n  </a>\\n\\n  <div class=\\\"menu\\\">\\n    <div *ngIf=\\\"true\\\" class=\\\"auth\\\">\\n      <!-- <div class=\\\"btn\\\">Sign In</div> -->\\n      <!-- <button mat-button>Click</button> -->\\n      <div style=\\\"margin:3px 0;\\\">or</div>\\n      <div>Create Account</div>\\n    </div>\\n    <div *ngIf=\\\"false\\\" class=\\\"profile\\\">Profile</div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n// import {MatButtonModule} from '@angular/material/button';\n\n@Component({\n  selector: 'layout-topbar',\n  templateUrl: './layout-topbar.component.html',\n  styleUrls: ['./layout-topbar.component.css']\n})\nexport class LayoutTopbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<layout-topbar></layout-topbar>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'layout-wrapper',\n  templateUrl: './layout-wrapper.component.html',\n  styleUrls: ['./layout-wrapper.component.css']\n})\nexport class LayoutWrapperComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}